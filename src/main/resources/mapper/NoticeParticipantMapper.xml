<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.igeekhome.colloa.mapper.NoticeParticipantMapper">
  <resultMap id="BaseResultMap" type="com.igeekhome.colloa.domain.NoticeParticipant">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="notice_code" jdbcType="VARCHAR" property="noticeCode" />
    <result column="participant_code" jdbcType="VARCHAR" property="participantCode" />
    <result column="priority" jdbcType="INTEGER" property="priority" />
    <result column="avaliable" jdbcType="INTEGER" property="avaliable" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, notice_code, participant_code, priority, avaliable
  </sql>
  <select id="selectByExample" parameterType="com.igeekhome.colloa.domain.NoticeParticipantExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from notice_participant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from notice_participant
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from notice_participant
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.igeekhome.colloa.domain.NoticeParticipantExample">
    delete from notice_participant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="batchInsert" parameterType="com.igeekhome.colloa.domain.NoticeParticipant">
    insert into notice_participant
    (notice_code,participant_code)
    VALUES
    <foreach collection="list" item="participant" index="index" separator=",">
      (#{participant.noticeCode,jdbcType=VARCHAR},#{participant.participantCode,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insert" parameterType="com.igeekhome.colloa.domain.NoticeParticipant">
    insert into notice_participant (id, notice_code, participant_code, 
      priority, avaliable)
    values (#{id,jdbcType=BIGINT}, #{noticeCode,jdbcType=VARCHAR}, #{participantCode,jdbcType=VARCHAR}, 
      #{priority,jdbcType=INTEGER}, #{avaliable,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.igeekhome.colloa.domain.NoticeParticipant">
    insert into notice_participant
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="noticeCode != null">
        notice_code,
      </if>
      <if test="participantCode != null">
        participant_code,
      </if>
      <if test="priority != null">
        priority,
      </if>
      <if test="avaliable != null">
        avaliable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="noticeCode != null">
        #{noticeCode,jdbcType=VARCHAR},
      </if>
      <if test="participantCode != null">
        #{participantCode,jdbcType=VARCHAR},
      </if>
      <if test="priority != null">
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="avaliable != null">
        #{avaliable,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.igeekhome.colloa.domain.NoticeParticipantExample" resultType="java.lang.Long">
    select count(*) from notice_participant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update notice_participant
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.noticeCode != null">
        notice_code = #{record.noticeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.participantCode != null">
        participant_code = #{record.participantCode,jdbcType=VARCHAR},
      </if>
      <if test="record.priority != null">
        priority = #{record.priority,jdbcType=INTEGER},
      </if>
      <if test="record.avaliable != null">
        avaliable = #{record.avaliable,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update notice_participant
    set id = #{record.id,jdbcType=BIGINT},
      notice_code = #{record.noticeCode,jdbcType=VARCHAR},
      participant_code = #{record.participantCode,jdbcType=VARCHAR},
      priority = #{record.priority,jdbcType=INTEGER},
      avaliable = #{record.avaliable,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.igeekhome.colloa.domain.NoticeParticipant">
    update notice_participant
    <set>
      <if test="noticeCode != null">
        notice_code = #{noticeCode,jdbcType=VARCHAR},
      </if>
      <if test="participantCode != null">
        participant_code = #{participantCode,jdbcType=VARCHAR},
      </if>
      <if test="priority != null">
        priority = #{priority,jdbcType=INTEGER},
      </if>
      <if test="avaliable != null">
        avaliable = #{avaliable,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.igeekhome.colloa.domain.NoticeParticipant">
    update notice_participant
    set notice_code = #{noticeCode,jdbcType=VARCHAR},
      participant_code = #{participantCode,jdbcType=VARCHAR},
      priority = #{priority,jdbcType=INTEGER},
      avaliable = #{avaliable,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>