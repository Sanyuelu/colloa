<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.igeekhome.colloa.mapper.DictCategoryMapper">
  <resultMap id="BaseResultMap" type="com.igeekhome.colloa.domain.DictCategory">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="dict_type_id" jdbcType="INTEGER" property="dictTypeId" />
    <result column="category_code" jdbcType="CHAR" property="categoryCode" />
    <result column="category_name" jdbcType="CHAR" property="categoryName" />
    <result column="category_desc" jdbcType="VARCHAR" property="categoryDesc" />
    <result column="rank" jdbcType="INTEGER" property="rank" />
    <result column="available" jdbcType="INTEGER" property="available" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, dict_type_id, category_code, category_name, category_desc, rank, available
  </sql>
  <select id="selectByExample" parameterType="com.igeekhome.colloa.domain.DictCategoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dict_category
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dict_category
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from dict_category
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.igeekhome.colloa.domain.DictCategoryExample">
    delete from dict_category
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.igeekhome.colloa.domain.DictCategory">
    insert into dict_category (id, dict_type_id, category_code, 
      category_name, category_desc, rank, 
      available)
    values (#{id,jdbcType=BIGINT}, #{dictTypeId,jdbcType=INTEGER}, #{categoryCode,jdbcType=CHAR}, 
      #{categoryName,jdbcType=CHAR}, #{categoryDesc,jdbcType=VARCHAR}, #{rank,jdbcType=INTEGER}, 
      #{available,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.igeekhome.colloa.domain.DictCategory">
    insert into dict_category
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dictTypeId != null">
        dict_type_id,
      </if>
      <if test="categoryCode != null">
        category_code,
      </if>
      <if test="categoryName != null">
        category_name,
      </if>
      <if test="categoryDesc != null">
        category_desc,
      </if>
      <if test="rank != null">
        rank,
      </if>
      <if test="available != null">
        available,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="dictTypeId != null">
        #{dictTypeId,jdbcType=INTEGER},
      </if>
      <if test="categoryCode != null">
        #{categoryCode,jdbcType=CHAR},
      </if>
      <if test="categoryName != null">
        #{categoryName,jdbcType=CHAR},
      </if>
      <if test="categoryDesc != null">
        #{categoryDesc,jdbcType=VARCHAR},
      </if>
      <if test="rank != null">
        #{rank,jdbcType=INTEGER},
      </if>
      <if test="available != null">
        #{available,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.igeekhome.colloa.domain.DictCategoryExample" resultType="java.lang.Long">
    select count(*) from dict_category
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dict_category
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.dictTypeId != null">
        dict_type_id = #{record.dictTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.categoryCode != null">
        category_code = #{record.categoryCode,jdbcType=CHAR},
      </if>
      <if test="record.categoryName != null">
        category_name = #{record.categoryName,jdbcType=CHAR},
      </if>
      <if test="record.categoryDesc != null">
        category_desc = #{record.categoryDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.rank != null">
        rank = #{record.rank,jdbcType=INTEGER},
      </if>
      <if test="record.available != null">
        available = #{record.available,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dict_category
    set id = #{record.id,jdbcType=BIGINT},
      dict_type_id = #{record.dictTypeId,jdbcType=INTEGER},
      category_code = #{record.categoryCode,jdbcType=CHAR},
      category_name = #{record.categoryName,jdbcType=CHAR},
      category_desc = #{record.categoryDesc,jdbcType=VARCHAR},
      rank = #{record.rank,jdbcType=INTEGER},
      available = #{record.available,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.igeekhome.colloa.domain.DictCategory">
    update dict_category
    <set>
      <if test="dictTypeId != null">
        dict_type_id = #{dictTypeId,jdbcType=INTEGER},
      </if>
      <if test="categoryCode != null">
        category_code = #{categoryCode,jdbcType=CHAR},
      </if>
      <if test="categoryName != null">
        category_name = #{categoryName,jdbcType=CHAR},
      </if>
      <if test="categoryDesc != null">
        category_desc = #{categoryDesc,jdbcType=VARCHAR},
      </if>
      <if test="rank != null">
        rank = #{rank,jdbcType=INTEGER},
      </if>
      <if test="available != null">
        available = #{available,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.igeekhome.colloa.domain.DictCategory">
    update dict_category
    set dict_type_id = #{dictTypeId,jdbcType=INTEGER},
      category_code = #{categoryCode,jdbcType=CHAR},
      category_name = #{categoryName,jdbcType=CHAR},
      category_desc = #{categoryDesc,jdbcType=VARCHAR},
      rank = #{rank,jdbcType=INTEGER},
      available = #{available,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>